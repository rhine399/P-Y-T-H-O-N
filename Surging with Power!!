# # Program to check if a number is the power of 2

# def power2(number):
#     #As the power of 2 will have only 1 set bit, then n-1 & n will 
#     #always be 0 for any power of 2
#     if  (number == 0):
#         return 0
#     if ((number & (~(number-1))) == number):
#         return 1
#     return 0

# number = int(input("Enter the number : "))

# if(power2(number)):
#     print("\nThe number is power of 2")
# else:
#     print("n\The number is not power of 2")    

#Program to check if a number is power of 4

# def powerOf4(number):
#     count = 0
#     # If only 1 set bit exists
#     if(number & (~(number & (number - 1)))):
#         # Count 0 bits before set bit
#         while(number > 1):
#             number >>= 1
#             count += 1

#         # If count is even return true else false
#         if(count % 2 == 0):
#             return True
#         else:
#             return False

# number = int(input("Enter your number : "))
# if(powerOf4(number)):
#     print(number, 'is a power of 4')
# else:
#     print(number, 'is not a power of 4')               

#Program to computer x^y without using math function


def computePower( x, y):
    #Default total is 1
    result = 1

    while (y > 0):
        # I y is even
        if (y % 2 == 0):
          x = x * x
        y>>=1

    else:
        result = result * x
        y = y - 1
    return result

x = int(input("Enter x for x^y : "))
y = int(input("Enter y for x^y : "))
print("Total : ", (computePower(x, y)))

